// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class eventMapTable : MonoBehaviour
{
	public class Row
	{
		public string number;
		public string start;
		public string end;
		public string viewSwitch;
		public string nextView;
		public string itemSwitch;
		public string nextItem;
		public string speakerSwitch;
		public string nextSpeaker;

	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.number = grid[i][0];
			row.start = grid[i][1];
			row.end = grid[i][2];
			row.viewSwitch = grid[i][3];
			row.nextView = grid[i][4];
			row.itemSwitch = grid[i][5];
			row.nextItem = grid[i][6];
			row.speakerSwitch = grid[i][7];
			row.nextSpeaker = grid[i][8];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_number(string find)
	{
		return rowList.Find(x => x.number == find);
	}
	public List<Row> FindAll_number(string find)
	{
		return rowList.FindAll(x => x.number == find);
	}
	public Row Find_start(string find)
	{
		return rowList.Find(x => x.start == find);
	}
	public List<Row> FindAll_start(string find)
	{
		return rowList.FindAll(x => x.start == find);
	}
	public Row Find_end(string find)
	{
		return rowList.Find(x => x.end == find);
	}
	public List<Row> FindAll_end(string find)
	{
		return rowList.FindAll(x => x.end == find);
	}
	public Row Find_viewSwitch(string find)
	{
		return rowList.Find(x => x.viewSwitch == find);
	}
	public List<Row> FindAll_viewSwitch(string find)
	{
		return rowList.FindAll(x => x.viewSwitch == find);
	}
	public Row Find_nextView(string find)
	{
		return rowList.Find(x => x.nextView == find);
	}
	public List<Row> FindAll_nextView(string find)
	{
		return rowList.FindAll(x => x.nextView == find);
	}
	public Row Find_itemSwitch(string find)
	{
		return rowList.Find(x => x.itemSwitch == find);
	}
	public List<Row> FindAll_itemSwitch(string find)
	{
		return rowList.FindAll(x => x.itemSwitch == find);
	}
	public Row Find_nextItem(string find)
	{
		return rowList.Find(x => x.nextItem == find);
	}
	public List<Row> FindAll_nextItem(string find)
	{
		return rowList.FindAll(x => x.nextItem == find);
	}
	public Row Find_speakerSwitch(string find)
	{
		return rowList.Find(x => x.speakerSwitch == find);
	}
	public List<Row> FindAll_speakerSwitch(string find)
	{
		return rowList.FindAll(x => x.speakerSwitch == find);
	}
	public Row Find_nextSpeaker(string find)
	{
		return rowList.Find(x => x.nextSpeaker == find);
	}
	public List<Row> FindAll_nextSpeaker(string find)
	{
		return rowList.FindAll(x => x.nextSpeaker == find);
	}

}